package ecologylab.semantics.generated.library.ted;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2012) Interface Ecology Lab.
 */

import ecologylab.net.ParsedURL;
import ecologylab.semantics.metadata.builtins.CompoundDocument;
import ecologylab.semantics.metadata.builtins.Document;
import ecologylab.semantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.semantics.metadata.mm_name;
import ecologylab.semantics.metadata.scalar.MetadataInteger;
import ecologylab.semantics.metadata.scalar.MetadataParsedURL;
import ecologylab.semantics.metametadata.MetaMetadataCompositeField;
import ecologylab.semantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;
import ecologylab.serialization.annotations.simpl_tag;
import java.lang.Integer;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/** 
 *Main theme  type class
 */ 
@simpl_inherit
public class ThemeType extends CompoundDocument
{
	/** 
	 *A picture of the theme
	 */ 
	@simpl_scalar
	private MetadataParsedURL pic;

	/** 
	 *Total number of videos under this theme
	 */ 
	@simpl_scalar
	@simpl_tag("Total_videos")
	private MetadataInteger TotalVideos;

	/** 
	 *Total number of comments
	 */ 
	@simpl_scalar
	@simpl_tag("Total_comments")
	private MetadataInteger TotalComments;

	/** 
	 *Some of the talks under this theme
	 */ 
	@simpl_collection("document")
	@mm_name("top_talks")
	private List<Document> topTalks;

	public ThemeType()
	{ super(); }

	public ThemeType(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public MetadataParsedURL	pic()
	{
		MetadataParsedURL	result = this.pic;
		if (result == null)
		{
			result = new MetadataParsedURL();
			this.pic = result;
		}
		return result;
	}

	public ParsedURL getPic()
	{
		return this.pic == null ? null : pic().getValue();
	}

	public MetadataParsedURL getPicMetadata()
	{
		return pic;
	}

	public void setPic(ParsedURL pic)
	{
		if (pic != null)
			this.pic().setValue(pic);
	}

	public void setPicMetadata(MetadataParsedURL pic)
	{
		this.pic = pic;
	}

	public MetadataInteger	TotalVideos()
	{
		MetadataInteger	result = this.TotalVideos;
		if (result == null)
		{
			result = new MetadataInteger();
			this.TotalVideos = result;
		}
		return result;
	}

	public Integer getTotalVideos()
	{
		return this.TotalVideos == null ? 0 : TotalVideos().getValue();
	}

	public MetadataInteger getTotalVideosMetadata()
	{
		return TotalVideos;
	}

	public void setTotalVideos(Integer TotalVideos)
	{
		if (TotalVideos != 0)
			this.TotalVideos().setValue(TotalVideos);
	}

	public void setTotalVideosMetadata(MetadataInteger TotalVideos)
	{
		this.TotalVideos = TotalVideos;
	}

	public MetadataInteger	TotalComments()
	{
		MetadataInteger	result = this.TotalComments;
		if (result == null)
		{
			result = new MetadataInteger();
			this.TotalComments = result;
		}
		return result;
	}

	public Integer getTotalComments()
	{
		return this.TotalComments == null ? 0 : TotalComments().getValue();
	}

	public MetadataInteger getTotalCommentsMetadata()
	{
		return TotalComments;
	}

	public void setTotalComments(Integer TotalComments)
	{
		if (TotalComments != 0)
			this.TotalComments().setValue(TotalComments);
	}

	public void setTotalCommentsMetadata(MetadataInteger TotalComments)
	{
		this.TotalComments = TotalComments;
	}

	public List<Document> getTopTalks()
	{
		return topTalks;
	}

  // lazy evaluation:
  public List<Document> topTalks()
  {
    if (topTalks == null)
      topTalks = new ArrayList<Document>();
    return topTalks;
  }

  // addTo:
  public void addToTopTalks(Document element)
  {
    topTalks().add(element);
  }

  // size:
  public int topTalksSize()
  {
    return topTalks == null ? 0 : topTalks.size();
  }

	public void setTopTalks(List<Document> topTalks)
	{
		this.topTalks = topTalks;
	}
}
